import groovy.json.JsonSlurper

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

def reactRepositoryPath = "$rootDir/repo"
def graphQlFilesPath = './xnative/src/main/res/raw'

allprojects {
    repositories {
        google()
        jcenter()

        maven {
            url "$reactRepositoryPath"
        }


        maven {
            // Replace AAR from original RN with AAR from react-native-v8
            url("$rootDir/../../node_modules/react-native-v8/dist")
        }
        maven {
            // prebuilt libv8.so
            url("$rootDir/../../node_modules/v8-android/dist")
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete graphQlFilesPath
}


task removePreviousReactArchives(type: Delete) {
    delete reactRepositoryPath
}

task generateReactArchives {
    subprojects { subproject ->
        apply plugin: 'maven'
        def reactSubprojects = [
            "xnative-rn-svg",
            "xnative-rn-webview",
            "xnative-rn-device-info",
            "xnative-rn-community-netinfo",
            "xnative-rn-community-art",
        ]
        def tcnPackageJson = new JsonSlurper().parseText(file("$rootDir/../../package.json").text)

        if (reactSubprojects.contains(subproject.name)) {
            task generateReactArchive(type: Upload) {
                configuration = subproject.configurations.archives
                repositories.mavenDeployer {
                    repository url: "file://${reactRepositoryPath}"

                    pom.project {
                        groupId 'uk.co.thetimes'
                        artifactId subproject.name
                        version tcnPackageJson.version
                    }
                }
            }

            generateReactArchives.dependsOn(generateReactArchive)
        }
    }
    task reactNativeCopy(type: Copy) {
        from('../../node_modules/react-native-v8/dist')
        into(reactRepositoryPath)
    }
    task v8Copy(type: Copy) {
        from('../../node_modules/v8-android/dist')
        into(reactRepositoryPath)
    }

    //pack the graphql files in the xnative.aar library so they can be reused by the android app
    task gqlCopy(type: Copy) {
        from('../../packages/provider-queries/src/')
        include "**/*.graphql"
        into(graphQlFilesPath)
    }

    removePreviousReactArchives.dependsOn(gqlCopy)
    reactNativeCopy.dependsOn(removePreviousReactArchives)
    v8Copy.dependsOn(reactNativeCopy)
    generateReactArchives.dependsOn(v8Copy)
}
